{"version":3,"sources":["webpack:///webpack/bootstrap 5fd1097f3f4bf887cf0c","webpack:///./src/connector/DB.js","webpack:///external \"apollo-server-express\"","webpack:///./src/connector/models/MTodo.js","webpack:///external \"sequelize\"","webpack:///./src/index.js","webpack:///./src/getServerData.js","webpack:///external \"merge-graphql-schemas\"","webpack:///external \"path\"","webpack:///./src/schema/schema.js","webpack:///./src/resolvers/index.js","webpack:///./src/resolvers/resolvers/Todo.js","webpack:///external \"dotenv\"","webpack:///external \"express\""],"names":["DB","constructor","connect","DB_HOST","DB_DIALECT","DB_USERNAME","DB_PASSWORD","DB_PORT","DB_NAME","process","env","sequelize","Sequelize","host","dialect","port","pool","max","min","acquire","idle","operatorsAliases","require","config","MTodo","define","title","STRING","description","done","BOOLEAN","sync","resolvers","schema","getServerData","server","ApolloServer","typeDefs","app","express","applyMiddleware","listen","console","log","graphqlPath","gql","Query","getTodo","Todo","getTodos","Mutation","createTodo","updateTodo","deleteTodo","obj","id","context","info","findAll","where","e","args","create","update","destroy"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5fd1097f3f4bf887cf0c","import Sequelize from 'sequelize';\n\nclass DB {\n\n\t/*\n\t* TODO move this to a logical location\n\t* Since webpack moves all imports at the top of the file and there's no guarantee that dotenv will be run as first unless we init in the constructor of the DB class\n\t* */\n\tconstructor() {\n\t\trequire('dotenv').config();\n\t}\n\n\tconnect = () => {\n\t\tconst {\n\t\t\tDB_HOST,\n\t\t\tDB_DIALECT,\n\t\t\tDB_USERNAME,\n\t\t\tDB_PASSWORD,\n\t\t\tDB_PORT,\n\t\t\tDB_NAME,\n\t\t} = process.env;\n\t\tconst sequelize = new Sequelize(DB_NAME, DB_USERNAME, DB_PASSWORD, {\n\t\t\thost: DB_HOST,\n\t\t\tdialect: DB_DIALECT,\n\t\t\tport: DB_PORT,\n\t\t\tpool: {\n\t\t\t\tmax: 5,\n\t\t\t\tmin: 0,\n\t\t\t\tacquire: 30000,\n\t\t\t\tidle: 10000\n\t\t\t},\n\t\t\t// http://docs.sequelizejs.com/manual/tutorial/querying.html#operators\n\t\t\toperatorsAliases: false\n\t\t});\n\t\treturn sequelize;\n\t};\n}\n\nexport default (\n\tnew DB()\n)\n\t.connect();\n\n\n// WEBPACK FOOTER //\n// ./src/connector/DB.js","module.exports = require(\"apollo-server-express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"apollo-server-express\"\n// module id = 1\n// module chunks = 0","import sequelize from '../DB';\nimport Sequelize from 'sequelize';\n\nconst MTodo = sequelize.define('todo', {\n\ttitle: Sequelize.STRING(255),\n\tdescription: Sequelize.STRING(1024),\n\tdone: Sequelize.BOOLEAN,\n});\n\nexport default MTodo;\n\n\n// WEBPACK FOOTER //\n// ./src/connector/models/MTodo.js","module.exports = require(\"sequelize\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"sequelize\"\n// module id = 3\n// module chunks = 0","// load .env file into process.env global\nimport getServerData from './getServerData';\nimport express from 'express';\nimport {ApolloServer, gql} from 'apollo-server-express';\nimport DB from './connector/DB';\n\n// init db singleton\nimport sequelize from './connector/DB';\nimport MTodo from \"./connector/models/MTodo\";\n\n(async() => {\n\t// Sync models to DB\n\tawait MTodo.sync();\n\n\n\t///////\n\n\tconst {resolvers, schema} = getServerData();\n\tconst server = new ApolloServer({typeDefs: schema, resolvers});\n\n\tconst app = express();\n\t// app.get('/world', (req,res) => res.send('hi!!'));\n\tserver.applyMiddleware({app});\n\n\tconst port = 4000;\n\n\tapp.listen({port}, () => {\n\t\t\tconsole.log(`ðŸš€ Server ready at http://localhost:${port}${server.graphqlPath}`)\n\t\t}\n\t);\n})();\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import {fileLoader, mergeResolvers, mergeTypes} from \"merge-graphql-schemas\";\nimport * as path from \"path\";\nimport schema from './schema/schema';\nimport resolvers from './resolvers/index';\n\n\nexport default () => {\n\t// remove merged graphql schema for simplicity\n\t// const types = mergeTypes(fileLoader(`${path.resolve('./src/types')}/**/*.{graphql,gql}`));\n\n\t// this way is more convenient since we don't have to keep track of our /src/resolvers/index.js file but\n\t// it forces us to use the syntax supported by the current node version. because webpack doesn't transpile non-imported/required files.\n\t// const resolvers = mergeResolvers(allResolvers);\n\treturn { schema, resolvers};\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/getServerData.js","module.exports = require(\"merge-graphql-schemas\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"merge-graphql-schemas\"\n// module id = 7\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 8\n// module chunks = 0","import { gql } from 'apollo-server-express';\n\nconst schema = gql`\n\ttype Todo {\n\t\tid: ID!,\n        createdAt: String!,\n        updatedAt: String!,\n\t\ttitle: String!,\n\t\tdescription: String!,\n\t\tdone: Boolean!,\n\t}\n\t\n\ttype Query {\n\t\tgetTodo(id: ID!): [Todo]!,\n\t\tgetTodos: [Todo]!,\n\t}\n\ttype Mutation {\n\t\tcreateTodo(title: String!, description: String!, done: Boolean!): Boolean!,\n\t\tupdateTodo(id: ID!, title: String!, description: String!, done: Boolean!): Boolean!,\n\t\tdeleteTodo(id: ID!): Boolean!,\n\t}\n\t\n`;\n\nexport default schema;\n\n\n// WEBPACK FOOTER //\n// ./src/schema/schema.js","import Todo from './resolvers/Todo';\n\nexport default {\n\tQuery: {\n\t\tgetTodo: Todo.getTodo,\n\t\tgetTodos: Todo.getTodos,\n\t},\n\n\tMutation: {\n\t\tcreateTodo: Todo.createTodo,\n\t\tupdateTodo: Todo.updateTodo,\n\t\tdeleteTodo: Todo.deleteTodo,\n\t}\n};\n\n\n// WEBPACK FOOTER //\n// ./src/resolvers/index.js","import MTodo from \"../../connector/models/MTodo\";\n\nclass Todo {\n\n\tgetTodo = async (obj, {id}, context, info) => {\n\t\ttry {\n\t\t\treturn await MTodo.findAll({\n\t\t\t\twhere: {\n\t\t\t\t\tid,\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (e) {\n\t\t\treturn [];\n\t\t}\n\t};\n\n\tgetTodos = async (obj, args, context, info) => {\n\t\ttry {\n\t\t\treturn await MTodo.findAll();\n\t\t} catch (e) {\n\t\t\treturn [];\n\t\t}\n\t};\n\n\tcreateTodo = async (obj, {title, description, done}, context, info) => {\n\t\ttry {\n\t\t\tawait MTodo.create({\n\t\t\t\ttitle,\n\t\t\t\tdescription,\n\t\t\t\tdone\n\t\t\t})\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t};\n\n\tupdateTodo = async (obj, {id, title, description, done}, context, info) => {\n\t\ttry {\n\t\t\tawait MTodo.update({\n\t\t\t\ttitle,\n\t\t\t\tdescription,\n\t\t\t\tdone,\n\t\t\t},\n\t\t\t\t{\n\t\t\t\t\twhere: {\n\t\t\t\t\t\tid,\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\n\t};\n\n\tdeleteTodo = async (obj, {id}, context, info) => {\n\t\ttry {\n\t\t\tawait MTodo.destroy({\n\t\t\t\twhere: {\n\t\t\t\t\tid,\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n}\n\nexport default new Todo();\n\n\n\n// WEBPACK FOOTER //\n// ./src/resolvers/resolvers/Todo.js","module.exports = require(\"dotenv\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"dotenv\"\n// module id = 12\n// module chunks = 0","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 13\n// module chunks = 0"],"sourceRoot":""}